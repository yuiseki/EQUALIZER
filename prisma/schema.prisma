// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Conversation {
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  userId          String      @db.ObjectId
  user            User        @relation(fields: [userId], references: [id])
  topic           String
  description     String
  comments        Comment[]
  @@map("conversations")
}

model Comment {
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  userId          String       @db.ObjectId
  user            User         @relation(fields: [userId], references: [id])
  conversationId  String       @db.ObjectId
  conversation    Conversation @relation(fields: [conversationId], references: [id])
  text            String
  votes           Vote[]
  @@map("comments")
}

model Vote {
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  userId          String      @db.ObjectId
  user            User        @relation(fields: [userId], references: [id])
  commentId       String      @db.ObjectId
  comment         Comment     @relation(fields: [commentId], references: [id])
  value           Int
  @@unique([commentId, userId])
  @@map("votes")
}

model User {
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String      @unique
  emailVerified   DateTime?   @map("verifiedAt")
  image           String
  sessions        Session[]
  accounts        Account[]
  conversations   Conversation[]
  comments        Comment[]
  votes           Vote[]
  @@map("users")
}

model Account {
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String?
  providerAccountId  String
  providerType       String?
  provider           String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  tokenType          String?
  scope              String?
  idToken            String?
  sessionState       String?
  oauth_token_secret String?
  oauth_token        String?
  user               User @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken    String      @unique
  userId          String      @db.ObjectId
  expires         DateTime    @map("expiresAt")
  user            User        @relation(fields: [userId], references: [id])
  @@map("sessions")
}
 
model VerificationToken {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  identifier      String
  token           String      @unique
  expires         DateTime    @map("expiresAt")
  @@unique([identifier, token])
  @@map("verification_tokens")
}
